on post-fs
#
# Connectivity related device nodes & configuration (begin)
#

#/dev/ttyMT2 for Connectivity BT/FM/GPS usage
    chmod 0660 /dev/ttyMT2
    chown system system /dev/ttyMT2


# STP, WMT, GPS, FM and BT Driver
    insmod /system/lib/modules/mtk_wmt_detect.ko
    #insmod /system/lib/modules/mtk_hif_sdio.ko
    #insmod /system/lib/modules/mtk_stp_wmt.ko
    #insmod /system/lib/modules/mtk_stp_uart.ko
    #insmod /system/lib/modules/mtk_stp_gps.ko
    #insmod /system/lib/modules/mtk_stp_bt.ko
    #insmod /system/lib/modules/mtk_fm_drv.ko
    #insmod /system/lib/modules/mtk_fm_priv.ko
    #insmod /system/lib/modules/mtk_wmt_wifi.ko

# Create char device file for WMT, GPS, BT, FM, WIFI
    mknod /dev/stpwmt c 190 0;
    mknod /dev/stpgps c 191 0;
    mknod /dev/stpbt  c 192 0;

    chmod 0660 /dev/stpwmt
    chown system system /dev/stpwmt
 
    mknod /dev/wmtWifi c 153 0
    chmod 0660 /dev/wmtWifi
    chown system system /dev/wmtWifi

# BT
    chmod 0660 /dev/stpbt
    chown bluetooth radio /dev/stpbt

# GPS
    chown gps gps /dev/stpgps
	chown gps gps /dev/ttyMT0
    chown gps gps /sys/class/gpsdrv/gps/pwrctl
    chown gps gps /sys/class/gpsdrv/gps/suspend
    chown gps gps /sys/class/gpsdrv/gps/state
    chown gps gps /sys/class/gpsdrv/gps/pwrsave
    chown gps gps /sys/class/gpsdrv/gps/status
   	chmod 0660 /dev/ttyMT0
   	chmod 0660 /dev/stpgps 

# FM Radio device node
	mknod /dev/fm	c 193 0;
	chmod 0660 /dev/fm
	chown system media /dev/fm

# WiFi
    mkdir /data/misc/wifi 0770 wifi wifi
    mkdir /data/misc/wifi/sockets 0770 wifi wifi
    mkdir /data/misc/wpa_supplicant 0770 wifi wifi
    chown wifi wifi /data/misc/wifi

# Load WiFi Driver
    insmod /system/lib/modules/wlan.ko

# Char device for BT 3.0 HS
    mknod /dev/ampc0 c 151 0
    chown bluetooth bluetooth /dev/ampc0
    chmod 0660 /dev/ampc0

#
# Connectivity related device nodes & configuration (end)
#

on boot

#
# Connectivity related services (Begin)
#

service wmt_loader  /system/bin/logwrapper /system/bin/wmt_loader
    user root
    group root
    oneshot
    
service 662x_launcher /system/bin/logwrapper /system/bin/6620_launcher -b 4000000 -p /system/etc/firmware/ -d /dev/ttyMT2
    user system
    group system
    oneshot

service wlanloader /system/bin/wlan_loader
    user root
    group root
    oneshot

#
# Connectivity related services (End)
#

#
#sensor service (end)
#
# This property trigger has added to imitiate the previous behavior of "adb root".
# The adb gadget driver used to reset the USB bus when the adbd daemon exited,
# and the host side adb relied on this behavior to force it to reconnect with the
# new adbd instance after init relaunches it. So now we force the USB bus to reset
# here when adbd sets the service.adb.root property to 1.  We also restart adbd here
# rather than waiting for init to notice its death and restarting it so the timing
# of USB resetting and adb restarting more closely matches the previous behavior.
on property:service.adb.root=1
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor $sys.usb.vid
    write /sys/class/android_usb/android0/functions $sys.usb.config
    write /sys/class/android_usb/android0/enable 1
    restart adbd
    setprop sys.usb.state $sys.usb.config
